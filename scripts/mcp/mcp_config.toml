# MCP Server Configuration
# This file drives the export_mcp_schema.py script to eliminate hard-coded values

[server]
# Server identification (can use templates with {repo}, {name}, etc.)
id_template = "https://github.com/{repo}/mcp-server.json"
repository_url_template = "https://github.com/{repo}.git"

# MCP Protocol - FIXED: Canonical schema URL from specification repository
protocol_version = "2025-03-26"  # Latest MCP spec version
schema_url = "https://raw.githubusercontent.com/modelcontextprotocol/specification/refs/heads/main/schema/2025-03-26/schema.json"

# Server categorization
categories = ["RAG", "Search", "AI", "LangChain"]
keywords = ["rag", "retrieval", "langchain", "fastapi", "semantic-search", "bm25", "vector-search"]

[capabilities]
# MCP server capabilities (enhanced for 2025-03-26)
[capabilities.tools]
listChanged = false

[capabilities.resources]
subscribe = false
listChanged = false

[capabilities.prompts]
listChanged = false

[capabilities.logging]
# Enable logging capabilities (empty dict means basic logging)

# NEW: Enhanced capabilities for 2025-03-26
[capabilities.completions]
# Support for argument autocompletion suggestions
enabled = false

[metadata]
# Default metadata when not available from other sources (these are consumed by the script)
default_author = "Advanced RAG Team"  # → server_descriptor["author"]
default_license = "MIT"  # → server_descriptor["license"] 
default_description = "FastAPI to MCP Integration"  # → server_descriptor["description"]

# Repository information (used for URL templates)
repo_owner = "donbr"
repo_name = "advanced-rag"

[annotations]
# Enhanced tool annotations for MCP 2025-03-26
[annotations.default]
audience = ["human", "llm"]
cache_ttl_seconds = 300

[annotations.governance]
data_access = "public"
ai_enabled = true
category = "search"
requires_approval = false
# NEW: Enhanced security annotations for 2025-03-26
is_read_only = true  # Most RAG tools are read-only
is_destructive = false  # RAG retrieval tools are non-destructive
has_network_access = true  # Vector database access
data_classification = "public"  # Movie review data is public

[annotations.resources]
estimated_duration = "medium"
is_intensive = false
# NEW: Resource usage annotations for 2025-03-26
memory_usage = "low"
network_usage = "medium"
storage_access = "read"

# NEW: Trust and safety annotations for 2025-03-26
[annotations.trust_and_safety]
content_filtering = true
rate_limited = true
audit_logged = true
requires_human_in_loop = false  # RAG searches don't need human approval

# Tool-specific overrides (enhanced for 2025-03-26)
[annotations.overrides.ensemble_retriever]
is_intensive = true
memory_usage = "high"
cache_ttl_seconds = 600  # Longer cache for intensive operations

[annotations.overrides.contextual_compression_retriever]
is_intensive = true
memory_usage = "high"
rate_limited = true

[annotations.overrides.multi_query_retriever]
is_intensive = true
memory_usage = "high"
rate_limited = true

[examples]
# Template examples for tools (enhanced for 2025-03-26)
default_questions = [
    "What makes a good action movie?",
    "How does John Wick compare to other action heroes?",
    "What are the key themes in action movies?",
    "Which action sequences are most memorable?"
]

# NEW: Content type support for 2025-03-26
[examples.content_types]
primary = ["text"]  # RAG tools primarily return text
supported = ["text"]  # Could extend to support audio/image in future

[validation]
# Validation settings (enhanced for 2025-03-26)
enable_json_schema_validation = true
require_examples = true
require_annotations = true
max_description_length = 500
# NEW: Enhanced validation options
validate_tool_annotations = true
validate_content_types = true
require_security_annotations = true

# COMMENTS: Field mappings for maintainability
# schema_url → server_descriptor["$schema"]
# protocol_version → server_descriptor["protocolVersion"] 
# categories → server_descriptor["categories"]
# keywords → server_descriptor["keywords"]
# capabilities → server_descriptor["capabilities"] 